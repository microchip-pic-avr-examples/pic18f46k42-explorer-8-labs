pipeline {
    agent {
        kubernetes {
            label 'pic18f46k42-explorer8-labs'
			defaultContainer 'xc8-mplabx'
            yamlFile 'cloudprovider.yml'
        }
    }

    parameters {
        string( name: 'NOTIFICATION_EMAIL',
                defaultValue: 'gaurang.gunde@microchip.com, prasad.aradhya@microchip.com',
                description: "Email to send build failure and fixed notifications.")
    }
	
	environment {		
		GITHUB_URL ='https://github.com/gauranggunde/pic18f46k42-explorer8-labs.git'
		BITBUCKET_URL = 'https://bitbucket.microchip.com/scm/ebe/pic18f46k42-explorer8-labs.git'
		DEPLOY_TOOL_URL = 'https://bitbucket.microchip.com/scm/~i15232/example-github-deployment-strategy-1.git'
		DEPLOY_SCRIPT_DIR = 'example-github-deployment-strategy-1'
		DEPLOY_SCRIPT_FILE = 'deploy-source-as-is.sh'
	}

    options {
        timestamps()
        timeout(time: 20, unit: 'MINUTES')
    }

    stages {
        stage('Checkout') {
            steps {
				checkout scm
            }
        }

		stage('Build') {
            steps {
				script {
					execute("git clone https://bitbucket.microchip.com/scm/citd/tool-mplabx-c-build.git")						
					execute("cd tool-mplabx-c-build && node buildLauncher.js sp=../ rp=./output genMK=true")		 
				}
            }
        }	
		
	}
    post {
		success{
			archiveArtifacts artifacts: "tool-mplabx-c-build/output/**", fingerprint: true

            script {
                if (!"${env.CHANGE_AUTHOR_EMAIL}".equalsIgnoreCase("null")) {
                    mail to: "${env.CHANGE_AUTHOR_EMAIL}, ${params.NOTIFICATION_EMAIL}",
                        subject: "Successful Pipeline: ${currentBuild.fullDisplayName}",
                        body: "Something is right with ${env.BUILD_URL}"
                } else {
                    mail to: "${params.NOTIFICATION_EMAIL}",
                        subject: "Successful Pipeline: ${currentBuild.fullDisplayName}",
                        body: "Something is right with ${env.BUILD_URL}"
                }
            }
        }        
        failure {
			archiveArtifacts artifacts: "tool-mplabx-c-build/output/**", fingerprint: true
			
            script {			
				if (!"${env.CHANGE_AUTHOR_EMAIL}".equalsIgnoreCase("null")) {		  
					mail to: "${env.CHANGE_AUTHOR_EMAIL}, ${params.NOTIFICATION_EMAIL}",
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Pipeline failure. ${env.BUILD_URL}"
				} else {			  
					mail to: "${params.NOTIFICATION_EMAIL}",
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Pipeline failure. ${env.BUILD_URL}"
				}
            }
        }
    }
}

def execute(String cmd) {
	if(isUnix()) {
		sh cmd
	} else {
		bat cmd
	}
}

